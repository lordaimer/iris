# {project_name} v{version} by {author}

# ==============================================
#                GENERAL SETTINGS
# ==============================================
[general]

# Target folder for the "iris sort" command:
# "required"  => must specify path manually
#                e.g., iris sort ~/Downloads
# "downloads" => always sort the Downloads folder
#                e.g., iris sort (runs anywhere)
# "current"   => sort the current working directory
#                e.g., iris sort (inside target folder)
target = "required"  # default: required [required | downloads | current]

# Organization mode:
# "relative" => organize files within their parent folder using relative_path subfolders
#               e.g., parent/relative_path/file.ext
# "absolute" => organize files anywhere using absolute_path
#               e.g., /home/user/MyDocuments/file.ext
mode = "relative"  # default: relative [relative | absolute]

# Folder to look for modular category schemas
# Iris will scan this folder for *.toml files defining categories.
# Categories defined inside the main file will also be loaded.
# MODULAR SUPPORT FOR PRESETS IS TO BE IMPLEMENTED IN v1. HENCE, IT'S COMMENTED OUT
presets_path = "./presets" # e.g., "presets"


# ==============================================
#                 FILE NAMING
# ==============================================
# [file_naming]

# Enable/disable renaming of files
# e.g., hello world.txt → hello.world.txt (if rename_files = true)
# rename_files = false  # default: false [true | false]

# Character to replace spaces with (only if rename_files = true)
# e.g., "hello world.txt" → "hello-world.txt" (if "-")
# space_replacement = "."  # default: "." ["-", "_", ".", ""]

# Renaming style applied to filenames (if rename_files = true)
# Examples:
# "lower"  => hello.world.txt
# "upper"  => HELLO.WORLD.TXT
# "title"  => Hello.World.Txt
# "camel" => helloWorld.txt
# "pascal" => HelloWorld.txt
# "snake" => hello_world.txt
# "kebab" => hello-world.txt
# rename_method = "lower"  # default: lower [lower | upper | title | camel | pascal | snake | kebab]

# Automatically remove invalid filesystem characters
# e.g., "my:file?.txt" → "myfile.txt"
# sanitize_names = true  # default: true [true | false]


# ==============================================
#                FILE EXCLUSIONS
# ==============================================
# [file_exclusions]

# File patterns to exclude (glob syntax)
# e.g., "*.tmp" excludes all temporary files
# patterns = [
#     "*.tmp",
#     "*.temp",
#     ".DS_Store",
#     "Thumbs.db",
#     "desktop.ini"
# ]

# Directory names to ignore completely
# e.g., node_modules and .git folders won’t be processed
# directories = [
#     ".git",
#     ".svn",
#     "node_modules",
#     "__pycache__",
#     ".venv",
#     ".idea"
# ]

# Minimum file size to process (in bytes)
# e.g., 1024 → only process files ≥ 1 KB; 0 → no limit
# min_file_size = 0  # default: 0

# Maximum file size to process (in bytes)
# e.g., 1048576 → skip files larger than 1 MB; 0 → no limit


# ==============================================
#          PRESETS (GLOBAL SETTINGS)
# ==============================================
# Presets can be defined here (optional) or
# inside modular TOML files in `presets_path` (recommended)
# Iris will load categories from both sources.
#
# Example structure for an in-file category (optional):
# [category.documents]
# enabled = true
# extension = ["pdf", "docx", "txt"]
# relative_path = "documents"
# absolute_path = "/home/user/Documents"
# recursive = false

[preset.documents]

# Enable or disable this preset
enabled = true  # default: true [true | false]

# File extensions included in this preset
# Example: "pdf" → matches all *.pdf files
extension = [
    "pdf", "doc", "docx", "txt", "md", "rtf", "odt",
    "xlsx", "xls", "csv", "ppt", "pptx"
]

# Path configuration:
# - relative_path → used if mode = "relative"
#     ~/Downloads/file.pdf -> ~/Downloads/documents/file.pdf
# - absolute_path → used if mode = "absolute"
#     ~/Downloads/file.pdf -> /home/user/Documents/file.pdf
relative_path = "documents"
absolute_path = "~/Documents"